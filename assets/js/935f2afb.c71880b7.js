"use strict";(self.webpackChunktarant_page=self.webpackChunktarant_page||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Welcome","href":"/docs/intro","docId":"intro"},{"type":"link","label":"Quick Start","href":"/docs/quick-start","docId":"quick-start"},{"type":"category","label":"Tutorial","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Designing a Tarant Application","href":"/docs/Tutorial/designing-a-tarant-application","docId":"Tutorial/designing-a-tarant-application"}],"href":"/docs/category/tutorial"},{"type":"category","label":"How To","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Create An Actor System","href":"/docs/How Tos/how-to-create-an-actor-system","docId":"How Tos/how-to-create-an-actor-system"},{"type":"link","label":"Create An Actor","href":"/docs/How Tos/how-to-create-an-actor","docId":"How Tos/how-to-create-an-actor"},{"type":"link","label":"Create A Function Actor","href":"/docs/How Tos/how-to-create-a-function-actor","docId":"How Tos/how-to-create-a-function-actor"},{"type":"link","label":"Apply Pub/Sub Patterns","href":"/docs/How Tos/how-to-apply-pubsub-patterns","docId":"How Tos/how-to-apply-pubsub-patterns"}],"href":"/docs/category/how-to"},{"type":"category","label":"Components","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Actor System","href":"/docs/Components/actor-system","docId":"Components/actor-system"},{"type":"link","label":"Materializers","href":"/docs/Components/materializers","docId":"Components/materializers"},{"type":"link","label":"Resolvers","href":"/docs/Components/resolvers","docId":"Components/resolvers"},{"type":"link","label":"Supervisors","href":"/docs/Components/supervisors","docId":"Components/supervisors"},{"type":"link","label":"Fibers","href":"/docs/Components/fibers","docId":"Components/fibers"},{"type":"link","label":"Mailboxes","href":"/docs/Components/mailboxes","docId":"Components/mailboxes"}],"href":"/docs/category/components"},{"type":"category","label":"Examples","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Ping Pong","href":"/docs/Examples/ping-pong","docId":"Examples/ping-pong"},{"type":"link","label":"Pub Sub","href":"/docs/Examples/pub-sub","docId":"Examples/pub-sub"},{"type":"link","label":"Schedules","href":"/docs/Examples/schedules","docId":"Examples/schedules"}],"href":"/docs/category/examples"},{"type":"category","label":"Modules","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Tarant","href":"/docs/Modules/tarant","docId":"Modules/tarant"},{"type":"link","label":"Tarant DB Persist","href":"/docs/Modules/tarant-db-persist","docId":"Modules/tarant-db-persist"},{"type":"link","label":"Tarant Local Storage","href":"/docs/Modules/tarant-local-storage","docId":"Modules/tarant-local-storage"},{"type":"link","label":"Tarant Sync Client","href":"/docs/Modules/tarant-sync-client","docId":"Modules/tarant-sync-client"},{"type":"link","label":"Tarant Sync Router Express","href":"/docs/Modules/tarant-sync-router-express","docId":"Modules/tarant-sync-router-express"},{"type":"link","label":"Tarant Vue","href":"/docs/Modules/tarant-vue","docId":"Modules/tarant-vue"}],"href":"/docs/category/modules"}]},"docs":{"Components/actor-system":{"id":"Components/actor-system","title":"Actor System","description":"Actor Systems hold all the information about the location of all the actors on an application, even if they are","sidebar":"tutorialSidebar"},"Components/fibers":{"id":"Components/fibers","title":"Fibers","description":"Fibers represent green threads with a set of resources. Usually, an application will contain only one fiber (because","sidebar":"tutorialSidebar"},"Components/mailboxes":{"id":"Components/mailboxes","title":"Mailboxes","description":"Mailboxes are a queue of messages with guaranteed ordering. Mailboxes have a set of useful properties that make them","sidebar":"tutorialSidebar"},"Components/materializers":{"id":"Components/materializers","title":"Materializers","description":"Materializers are hooks over the lifecycle of an actor. They are used to add implicit infrastructure logic to an actor. Some","sidebar":"tutorialSidebar"},"Components/resolvers":{"id":"Components/resolvers","title":"Resolvers","description":"Resolvers let us find actors that have been persisted in external systems, like databases or storages. One example","sidebar":"tutorialSidebar"},"Components/supervisors":{"id":"Components/supervisors","title":"Supervisors","description":"Supervisors are the responsible of handling actor failures and deciding the strategy to recover. There are two types","sidebar":"tutorialSidebar"},"Examples/ping-pong":{"id":"Examples/ping-pong","title":"Ping Pong","description":"This example shows how actors can call each other without blocking themselves.","sidebar":"tutorialSidebar"},"Examples/pub-sub":{"id":"Examples/pub-sub","title":"Pub Sub","description":"This example demonstrates how Actors process messages independently. When you press the +1 button, you will see how","sidebar":"tutorialSidebar"},"Examples/schedules":{"id":"Examples/schedules","title":"Schedules","description":"This example shows how actors can schedule the execution of messages dynamically.","sidebar":"tutorialSidebar"},"How Tos/how-to-apply-pubsub-patterns":{"id":"How Tos/how-to-apply-pubsub-patterns","title":"Apply Pub/Sub Patterns","description":"Tarant implements a basic, but powerful pubsub mechanism named topics. A topic is a stream of events that are sent to","sidebar":"tutorialSidebar"},"How Tos/how-to-create-a-function-actor":{"id":"How Tos/how-to-create-a-function-actor","title":"Create A Function Actor","description":"Sometimes creating a whole actor is not needed because the problem to solve is relatively simple and a set of","sidebar":"tutorialSidebar"},"How Tos/how-to-create-an-actor":{"id":"How Tos/how-to-create-an-actor","title":"Create An Actor","description":"Actors represent the main unit of logic in the Actor Model. They are transactional, asynchronous and safe. When you work","sidebar":"tutorialSidebar"},"How Tos/how-to-create-an-actor-system":{"id":"How Tos/how-to-create-an-actor-system","title":"Create An Actor System","description":"Actor Systems hold all the information about the location of all the actors on an application, even if they are","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Welcome","description":"Welcome to the Tarant user guide! This guide shows you how to get started on this actor model framework.","sidebar":"tutorialSidebar"},"Modules/tarant":{"id":"Modules/tarant","title":"Tarant","description":"Tarant is a TypeScript/JavaScript library for building software using the actor system model.","sidebar":"tutorialSidebar"},"Modules/tarant-db-persist":{"id":"Modules/tarant-db-persist","title":"Tarant DB Persist","description":"Motivation","sidebar":"tutorialSidebar"},"Modules/tarant-local-storage":{"id":"Modules/tarant-local-storage","title":"Tarant Local Storage","description":"Motivation","sidebar":"tutorialSidebar"},"Modules/tarant-sync-client":{"id":"Modules/tarant-sync-client","title":"Tarant Sync Client","description":"Motivation","sidebar":"tutorialSidebar"},"Modules/tarant-sync-router-express":{"id":"Modules/tarant-sync-router-express","title":"Tarant Sync Router Express","description":"Motivation","sidebar":"tutorialSidebar"},"Modules/tarant-vue":{"id":"Modules/tarant-vue","title":"Tarant Vue","description":"Motivation","sidebar":"tutorialSidebar"},"quick-start":{"id":"quick-start","title":"Quick Start","description":"Tarant is a JavaScript library that implements the Actor Model, which makes concurrent programming easy to understand","sidebar":"tutorialSidebar"},"Tutorial/designing-a-tarant-application":{"id":"Tutorial/designing-a-tarant-application","title":"Designing a Tarant Application","description":"Tarant is a framework which has been designed for performance and easiness of development. However, it\'s based in the actor model, so some known design patterns","sidebar":"tutorialSidebar"}}}')}}]);